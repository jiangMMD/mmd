<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmd.dao.ProductDao">
    <resultMap id="productInfo" type="productsinfo">
        <id column="pid" property="pid"></id>
        <result column="mer_id" property="merId"></result>
        <result column="state" property="state"></result>
        <result column="prodno" property="prodno"></result>
        <result column="pname" property="pname"></result>
        <result column="title" property="title"></result>
        <result column="desc" property="desc"></result>
        <result column="homeimg" property="homeimg"></result>
        <result column="paramimg" property="paramimg"></result>
        <result column="categoryid" property="categoryid"></result>
        <result column="isproportion" property="isproportion"></result>
        <result column="shopprice" property="shopprice"></result>
        <result column="shopmmdprice" property="shopmmdprice"></result>
        <result column="costprice" property="costprice"></result>
        <result column="isbest" property="isbest"></result>
        <result column="ishot" property="ishot"></result>
        <result column="isnew" property="isnew"></result>
        <result column="isfree" property="isfree"></result>
        <result column="expressfee" property="expressfee"></result>
        <result column="weight" property="weight"></result>
        <result column="volume" property="volume"></result>
        <result column="inventory" property="inventory"></result>
        <result column="sell" property="sell"></result>
        <result column="commentcount" property="commentcount"></result>
        <result column="bestcount" property="bestcount"></result>
        <result column="mediumccount" property="mediumccount"></result>
        <result column="badcount" property="badcount"></result>
        <result column="average" property="average"></result>
        <result column="isflashview" property="isflashview"></result>
        <result column="service_ids" property="serviceIds"></result>
        <result column="crtuser" property="crtuser"></result>
        <result column="crtdate" property="crtdate"></result>
        <result column="recsts" property="recsts"></result>
        <collection property="carousalList" ofType="map" javaType="arrayList">
            <id column="id" property="id"></id>
            <result column="pd_url" property="pd_url"></result>
            <result column="pd_order" property="pd_order"></result>
        </collection>
    </resultMap>

    <insert id="insertSku" useGeneratedKeys="true" keyProperty="params.sku_id" keyColumn="sku_id">
        insert into prod_sku(pid, sku_val, sku_valname, price, mmdprice, repertory)
        VALUES (#{params.pid}, #{params.sku_val}, #{params.skuValname}, #{params.price}, #{params.mmdprice}, #{params.repertory})
    </insert>
    <insert id="insertSkuRel">
        insert into prod_proprel(pid, prop_name_id, prop_val_id)
        VALUES
        <foreach collection="set" item="data" separator=",">
            (#{pid}, '${data.prop_name_id}', '${data.prop_val_id}')
        </foreach>
    </insert>

    <insert id="addProd" parameterType="productsinfo">
        insert into productsinfo(mer_id, prodno, pname, title, `desc`, homeimg, paramimg, categoryid, shopprice,
        shopmmdprice, costprice, service_ids, crtuser, crtdate)
        VALUES (#{merId}, #{prodno}, #{pname}, #{title}, #{desc}, #{homeimg}, #{paramimg}, #{categoryid}, #{shopprice},
        #{shopmmdprice}, #{costprice}, #{serviceIds}, #{crtuser}, now())
    </insert>
    <insert id="uploadCarousel" useGeneratedKeys="true" keyColumn="id" keyProperty="params.id">
        insert into prod_carousal(pid, pd_url, crtdate)
        VALUES (#{pid}, #{goods_url}, now())
    </insert>

    <delete id="delAllSkuRel">
        DELETE from prod_proprel where pid = #{pid}
    </delete>
    <delete id="delCarousel">
        delete from prod_carousal where pd_url like concat('%', #{filename}) and pid = #{pid}
    </delete>

    <select id="getProClassifyByKey" resultType="map">
        select id, `name` text  from classify
        <where>
            recsts = '1'
            <if test="key != null and key != ''">
                and `name` like concat('%', #{key}, '%')
            </if>
            order by `order`
        </where>
        limit 10
    </select>

    <select id="getProductList" resultType="Productsinfo" parameterType="Productsinfo">
        select p.pid,p.mer_id,p.state,p.pname,p.title,p.desc,p.homeimg,p.paramimg,p.categoryid,p.shopprice,
        p.shopmmdprice,p.costprice,p.isbest,p.ishot,p.isnew,p.isfree,p.inventory,p.expressfee,p.weight,p.volume,
        p.sell,p.commentcount,p.bestcount,p.mediumccount,p.badcount,p.average,p.isflashview,p.prodno,service_ids,
        p.crtuser,p.crtdate,p.recsts,mer_name,
        (select c.name from classify c where c.id = p.categoryid) proClassify
        from productsinfo p left join merchant m on p.mer_id = m.mer_id where p.recsts != 'D'
        <if test="merName != null and merName !=''">
            and m.mer_name like concat('%', #{merName}, '%')
        </if>
        <if test="prodno != null and prodno !=''">
            and prodno like concat('%', #{prodno}, '%')
        </if>
        <if test="pname != null and pname != ''">
            and pname like concat('%', #{pname}, '%')
        </if>
        <if test="categoryid != null and categoryid != ''">
            and categoryid = #{categoryid}
        </if>
        <if test="state != null and state != ''">
            and state = #{state}
        </if>
    </select>


    <update id="delProduct">
        update productsinfo set recsts = 'D' where pid in <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </update>

    <update id="uplineProduct">
        update productsinfo set state = '1' where pid in <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </update>

    <update id="downlineProduct">
        update productsinfo set state = '2' where pid in <foreach collection="ids" item="id" open="(" close=")" separator=",">#{id}</foreach>
    </update>

    <update id="updateSku">
        update prod_sku set sku_val = #{params.sku_val}, sku_valname = #{params.skuValname},
          price = #{params.price}, mmdprice = #{params.mmdprice}, repertory = #{params.repertory} where sku_id = #{params.sku_id}
    </update>
    <update id="delProdSku">
        update prod_sku set recsts = 'D' where sku_id = #{sku_id}
    </update>

    <update id="updateProd" parameterType="productsinfo">
        update productsinfo set pname = #{pname}, title = #{title},
         categoryid = #{categoryid}, volume = #{volume}, weight = #{weight},
         shopprice = #{shopprice}, shopmmdprice = #{shopmmdprice},
         isproportion = #{isproportion}, costprice = #{costprice}, `desc` = #{desc},
         service_ids = #{serviceIds}
         <if test="homeimg != null  and homeimg != ''">
             ,homeimg = #{homeimg}
         </if>
        <if test="paramimg != null  and paramimg != ''">
            ,paramimg = #{paramimg}
        </if>
         where pid = #{pid}
    </update>

    <select id="getProductDetail" resultType="productsinfo">
        select * from productsinfo where pid = #{id}
    </select>

    <select id="getProdCarousal" resultType="prodCarousal">
        select * from prod_carousal where pid = #{id}
        order by crtdate
    </select>

    <select id="getCarousalList" resultType="ProdCarousal" parameterType="string">
        select id, pd_url from prod_carousal where pid = #{id} order by pd_order
    </select>

    <select id="getProdService" resultType="map">
        select ps.sid, ps.content from prod_service ps
        where concat(',', (select service_ids from productsinfo p where p.pid = #{id}), ',') like concat('%,', ps.sid, ',%')
    </select>

    <select id="getProdSku" resultType="map">
        select sku_id, sku_val, sku_valname, price, mmdprice, repertory, salenum from prod_sku sku
        where sku.pid = #{id} and recsts = '1'
    </select>

    <select id="getProdPropBySku" resultType="map">
        (select pn.prop_id, pn.prop_name, pv.pv_id, pv.prop_id propval_id, pv.prop_val
        from prod_skupropname pn left join prod_skupropval pv on pn.prop_id = pv.prop_name_id
        where pv.prop_name_id = #{parMap.prop_name_id} and pv.prop_id = #{parMap.prop_val_id})
    </select>

    <select id="getAllProdService" resultType="map">
        select sid, content, CONCAT(',', '${serviceIds}', ',') LIKE CONCAT('%,', sid, ',%') isexit  from prod_service
    </select>

    <select id="getProdParamImg" resultType="map">
        select id, img  from prod_detailimg where pid = #{id} order by ord
    </select>

    <select id="getProdSkuDetail" resultType="map">
        select sku_id, sku_val, price, mmdprice, repertory from prod_sku where sku_id = #{sku_id}
    </select>

    <select id="getAllProdSkuVals" resultType="string">
        select sku_val from prod_sku where pid = #{pid} and recsts = '1'
    </select>



</mapper>